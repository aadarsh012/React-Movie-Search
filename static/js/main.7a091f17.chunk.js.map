{"version":3,"sources":["Components/Poster/Poster.js","Components/Description/Description.js","App.js","index.js"],"names":["poster","props","className","alt","src","image","description","title","director","actors","boxoffice","languages","plot","production","year","ratings","map","rating","index","Source","Value","App","useState","movieInfo","setMovieInfo","setTitle","ref","useRef","useEffect","movieData","current","continuousStart","fetch","then","res","json","movie","console","log","complete","catch","err","Response","undefined","Title","Poster","Actors","Director","BoxOffice","Language","Plot","Year","Production","Ratings","color","type","placeholder","onChange","event","onSearch","target","value","onKeyUp","keyCode","onEnterKey","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAUeA,EARA,SAACC,GACd,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKC,IAAI,SAASC,IAAKH,EAAMI,WCqCpBC,G,MAxCK,SAACL,GAAW,IAAD,EAC7B,OACE,sBAAKC,UAAU,cAAf,UACE,4BACE,iCAASD,EAAMM,UAEjB,4BACE,iDAAoBN,EAAMO,cAE5B,4BACE,+CAAkBP,EAAMQ,YAE1B,4BACE,kDAAqBR,EAAMS,eAE7B,4BACE,kDAAqBT,EAAMU,eAE7B,4BACE,6CAAgBV,EAAMW,UAExB,4BACE,mDAAsBX,EAAMY,gBAE9B,4BACE,6CAAgBZ,EAAMa,UAExB,wCACGb,EAAMc,eADT,aACG,EAAeC,KAAI,SAACC,EAAQC,GAC3B,OACE,8BACGD,EAAOE,OADV,MACqBF,EAAOG,QADpBF,aCwDLG,MAhFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOf,EAAP,KAAckB,EAAd,KACMC,EAAMC,iBAAO,MAEnBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAY,WAChBH,EAAII,QAAQC,kBACZC,MAAM,0BAAD,OAA2BzB,EAA3B,qBACF0B,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZZ,EAAaY,GAEbV,EAAII,QAAQS,cAEbC,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,OAO5BL,EAAQ,KA4BZ,OA1BEA,EADyB,UAAvBb,EAAUmB,eAA4CC,IAApBpB,EAAUqB,MACtCR,EAAQ,uDAGd,sBAAKlC,UAAU,OAAf,UACE,cAAC,EAAD,CAAQG,MAAK,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAAWsB,SAC1B,cAAC,EAAD,CACEtC,MAAK,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAWqB,MAClBnC,OAAM,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAWuB,OACnBtC,SAAQ,OAAEe,QAAF,IAAEA,OAAF,EAAEA,EAAWwB,SACrBrC,UAAS,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAWyB,UACtBrC,UAAS,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAW0B,SACtBrC,KAAI,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAW2B,KACjBpC,KAAI,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAW4B,KACjBtC,WAAU,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAW6B,WACvBrC,QAAO,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAW8B,aAa1B,sBAAKnD,UAAU,MAAf,UACE,cAAC,IAAD,CAAYoD,MAAM,UAAU5B,IAAKA,IACjC,sBAAKxB,UAAU,SAAf,UACE,4BACE,oDAEF,qBAAKA,UAAU,SAAf,SACE,uBACEqD,KAAK,SACLC,YAAY,mBACZC,SAAU,SAACC,GAAD,OA3CH,SAACnD,GAChBkB,EAASlB,GA0CoBoD,CAASD,EAAME,OAAOC,QAC3CC,QAAS,SAACJ,GAAD,OAlBA,SAACA,GACI,KAAlBA,EAAMK,SACRlC,IAgB0BmC,CAAWN,QAGnC,wBAAQO,QAASpC,EAAjB,SACE,qBAAK1B,IAAI,cAAcC,IAAI,oEAG9BgC,MC9EP8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a091f17.chunk.js","sourcesContent":["import \"./Poster.css\";\r\n\r\nconst poster = (props) => {\r\n  return (\r\n    <div className=\"Container\">\r\n      <img alt=\"poster\" src={props.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default poster;\r\n","import \"./Description.css\";\r\n\r\nconst description = (props) => {\r\n  return (\r\n    <div className=\"Description\">\r\n      <p>\r\n        <strong>{props.title}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Director : {props.director}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Actors : {props.actors}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>BoxOffice : {props.boxoffice}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Languages : {props.languages}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Plot : {props.plot}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Production : {props.production}</strong>\r\n      </p>\r\n      <p>\r\n        <strong>Year : {props.year}</strong>\r\n      </p>\r\n      <div>\r\n        {props.ratings?.map((rating, index) => {\r\n          return (\r\n            <p key={index}>\r\n              {rating.Source} : {rating.Value}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default description;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport LoadingBar from \"react-top-loading-bar\";\n// https://omdbapi.com/?t=the avengers&apikey=4e18d181\n\nimport \"./App.css\";\nimport Poster from \"./Components/Poster/Poster\";\nimport Description from \"./Components/Description/Description\";\n\nfunction App() {\n  const [movieInfo, setMovieInfo] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const ref = useRef(null);\n\n  useEffect(() => {\n    movieData();\n  }, []);\n\n  const movieData = () => {\n    ref.current.continuousStart();\n    fetch(`https://omdbapi.com/?t=${title}&apikey=4e18d181`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((movie) => {\n        console.log(movie);\n        setMovieInfo(movie);\n\n        ref.current.complete();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const onSearch = (title) => {\n    setTitle(title);\n  };\n\n  let movie = null;\n  if (movieInfo.Response === \"False\" || movieInfo.Title === undefined) {\n    movie = movie = <h1>Please Search a Movie</h1>;\n  } else {\n    movie = (\n      <div className=\"Main\">\n        <Poster image={movieInfo?.Poster} />\n        <Description\n          title={movieInfo?.Title}\n          actors={movieInfo?.Actors}\n          director={movieInfo?.Director}\n          boxoffice={movieInfo?.BoxOffice}\n          languages={movieInfo?.Language}\n          plot={movieInfo?.Plot}\n          year={movieInfo?.Year}\n          production={movieInfo?.Production}\n          ratings={movieInfo?.Ratings}\n        />\n      </div>\n    );\n  }\n\n  const onEnterKey = (event) => {\n    if (event.keyCode === 13) {\n      movieData();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <LoadingBar color=\"#ff8800\" ref={ref} />\n      <div className=\"Header\">\n        <p>\n          <strong>React Movies</strong>\n        </p>\n        <div className=\"Search\">\n          <input\n            type=\"search\"\n            placeholder=\"Enter Movie Name\"\n            onChange={(event) => onSearch(event.target.value)}\n            onKeyUp={(event) => onEnterKey(event)}\n          />\n        </div>\n        <button onClick={movieData}>\n          <img alt=\"search-icon\" src=\"https://img.icons8.com/ios-glyphs/30/000000/search--v1.png\" />\n        </button>\n      </div>\n      {movie}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}